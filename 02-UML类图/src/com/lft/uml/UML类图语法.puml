@startuml
!define DARK
!include G:\WorkSpace\Java\IJCode\Design-Pattern\lib\LFT-UML.puml
' 允许各种图混合使用
allowmixing

' 标题
title UML类图语法

''''类与类之间的关系

class Oxygen
class Water

class Animal{
	+ life: Life
	+ metabolism(Water,Oxygen): void
	+ breed(): Animal
}

Animal .up.> Oxygen : dependency
note on link
依赖关系
end note
Animal .up.> Water : dependency

class Bird{
	+ feather: Feather
	+ breed(): Bird
}

class Wing

Bird -up-|> Animal : generalization
Bird "1" *-right- "2" Wing : composition >

class WildGoose{
	+ breed(): Bird
	+ fly(): void
}

WildGoose --() Fly : implements
note on link
实现接口，棒棒糖表示法
end note

class WildGeese{
	+ flyInVShape(): void
	+ flyInIShape(): void
}

WildGoose -up-|> Bird : generalization
WildGoose -right-o WildGeese : aggregation


class Duck{
	+ breed(): Bird
}

Duck -up-|> Bird : generalization

class DonaldDuck{
	+ talk(): void
}

DonaldDuck --() Talk : implements
note on link
实现接口，棒棒糖表示法
end note
DonaldDuck -up-|> Duck : generalization

Class Penguin{
	+ breed(): Bird
}
Penguin -up-|> Bird : generalization

class Climate
Penguin -right-> Climate : association













/''''说明与样式
' 类之间的关系
依赖关系..>     .>		<.		<..
继承关系--|>    -|>		<|-		<|--
实现关系..|>    .|>		<|.		<|..
关联关系-->     <-->		--		->		<->
聚合关系--o     <--o		o-		o--
组合关系--*     <--*		*-		*--

' 访问权限
- private
# protected
~ default
+ public

' 备注
1. note top of Object : 备注在对象的四周
2. note "无方位位置" as Note1
3. note left: 备注在前一个类的四周
4. note on link #red : 链接注释
5. note left of Object
	注释内容
   end note

' 包
package com.lft.design.pattern {
	' 接口
	interface Interface
	' 棒棒糖接口 ()-- ()- --() -()
	interface ()-- A
	' 抽象类
	abstract class AbstractClass
}
' 枚举
enum TimeUnit{
	DAYS
	HOURS
	MINUTES
	SECONDS
}

' 泛型
class Eye<? extends Head>{

}

' 命名空间
namespace net.dummy #DDDDDD {
	Meeting o-- Person
	.BaseClass <|- Meeting
}

' 改变箭头方向 left right up down
A .up.> B

' 关系类
class Student{
	Name
}
Student "0..*" -- "1..*" Course
(Student, Course) . Enrollment
class Enrollment{
	drop()
	cancel()
}

' 普通类
class Person{
	..Field..
	{field}				- name: String
	{static}{field}		- head: Head
	--Constructor--
	+ Person(name: String)
	==Method==
	{method}			+ getName(): String
	{abstract}{method}	+ doSomething(): void
	__Other__
}
class Head
Person "1" *-- "1" Head : contains >

' 类说明
class A << (I,#FF7700) 说明 >>
' 箭头颜色
A .[#395862].> B
'/
@enduml